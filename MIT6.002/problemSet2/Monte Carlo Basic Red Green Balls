import random

def drawBalls():
    bucket = ["r", "r", "r", "g", "g", "g"]
    balls = random.sample(bucket, 3) #draws 3 balls at random without replacement
    red = 0
    green = 0
    for ball in balls:
        if ball == "r": #sums up red balls pulled
            red += 1
        else:
            green += 1 #sums up green pulled
    if green == 3 or red == 3:
        return 1 #we only care if the trail 
                 #results in 3 of the same color balls being pulled
    else:
        return 0
        
def noReplacementSimulation(numTrials):
    '''
    Runs numTrials trials of a Monte Carlo simulation
    of drawing 3 balls out of a bucket containing
    3 red and 3 green balls. Balls are not replaced once
    drawn. Returns the a decimal - the fraction of times 3 
    balls of the same color were drawn.
    '''
    a = 0
    for trial in range(numTrials): #run through trials
        a += drawBalls() #sum up trials that result in 3 of the same color balls pulled
    return a / numTrials #ratio of trails with 3 of the same color balls pulled
    
a = noReplacementSimulation(10000)
b = noReplacementSimulation(10000)
c = noReplacementSimulation(10000)
d = noReplacementSimulation(10000)

print(a,b,c,d)